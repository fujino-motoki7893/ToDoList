name: Frontend Build Check

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        id: build
        run: |
          docker build -f ./Dockerfile . || (echo "##[error] ビルドエラーが発生しました" && exit 1)

      - name: Upload production artifacts
        if: success() && steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Send failure message
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: failure() && steps.build.outcome == 'failure'
        run: |
          build_result="${{ steps.build.outputs.error }}"
          # 特殊文字をURLエンコード
          build_result="${build_result//'%'/'%25'}"
          build_result="${build_result//$'\n'/'%0A'}"
          build_result="${build_result//$'\r'/'%0D'}"
          gh pr comment "${{ github.event.pull_request.number }}" --body "ビルドでエラーが出力されました
          対象プロジェクト: $project
          対象コミット: ${{ github.event.pull_request.head.sha }}
          エラー結果:
            ```
            $build_result
            ```"

      - name: Output Build Error
        if: failure() && steps.build.outcome == 'failure'
        run: |
          echo "## ビルドエラーの詳細"
          echo "```"
          echo "${{ steps.build.outputs.error }}"
          echo "```"
